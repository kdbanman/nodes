
#BUGS
#####

- loading specific entity from file does not load visual data

- strange change in lighting after toggling labels
    - only objects between camera and label plane are affected

- null pointer exception occurs in Selection.java:435 in broadcastChange()

#KARIM
######

- with change of the collection type in Selection.java, modifiers such as SelectAll have become noticeably slower
	- Explore alternatives; different structure for selection? a multi-threaded Selection rewrite? Cake?
	- Reason why Collections.synchronizedSet was ditched because it doesn't provide a synchronized iterator 

- explore alternatives to swing for formatted infopanel text

- split ControlPanel.java inner classes into separate files

- conditional element sorting based on transparency
	- see Graph.DepthSortedGroup

#MAJOR CHANGES
##############

- "Query File" reads the entire file, entity dropdown queries that entity on click.
    - swap their UI element positions.

- 2 way data interaction between infobox and graph(textual vs. 3D)
	- hyperlinks with html infobox

#MODIFIERS
##########

- MODIFIERSET (resource can have multiple types) : select all nodes of same rdf:Type

- MODIFIERSET (edge can have multiple triples) : select all edges with common predicate, predicate and object, subject and predicate
	- exclusions:
		-common subject, predicate, and object will select exactly the already-selected edge
		- common subject and object will select exactly the. already-selected edge
		- common subject or object are trivial for the user to figure out - just select the neighborhood of the node he or she wants
	- is there a special case for edges that contain at least one triple in each direction

- select shortest path between 2 nodes

- select most central node of selection

- select most central edge of selection

#MINOR
######

- Node and Edge IDs (during creation, getting, and setting) should be
  explicitly URI or literal value, because a ReifiedStatement's .toString()
  method does not return something that will work in a SPARQL query
    - GraphElement name compliance with SPARQL queriability was part of 
      the *intended* design

- event log needs a better API.  right now different parts of an event need to be logged with logEvent() in reverse order to appear in the correct order to the user.  also, dividers appear between each of these different parts.  silliness.
    - solution: append to the end, not the beginning.

- additional logic to Node and Edge isInside() code: whether it visible (opposite the camera from the near frustum plane)
	- if this isn't already there, it should be
	- if it is there, move it to a dedicated boolean method
		- box selection needs to use this to fix the bug where things behind the near frustum are selected
NOTE:  *this is only necessary within Edge*  (already in the Node.inside() code by virtue of vector angle calculation)

- test multiple additions for prefix overwrite (rdf then rdfs documents replicates)  OR  just ensure that we do not overwrite existing prefixes
	- could cause data integrity problems if prefixed names exist in the Graph whose namespace prefixes have changed within the Graph's jena model.

- add numerical size scale
	- 1 pass to find min and max, then set scale for interpolation, then 1 more pass to modifiy scale.

- find some way to swap state around to show color changes on selected nodes

- make color picker better looking
